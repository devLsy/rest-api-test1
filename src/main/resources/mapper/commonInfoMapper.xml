<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="study.dev.ssrmbrlsy.mapper.CommonInfoMapper">

	<!--1단계 전체 지역 검색-->
	<select id="selectRegionsList" resultType="study.dev.ssrmbrlsy.vo.hr.RegionsVo">
		SELECT REGION_ID AS regionId
		     , REGION_NAME AS regionName
          FROM REGIONS
		 ORDER BY REGION_ID
	</select>

	<!--2단계 나라 검색-->
	<select id="selectContriesList" resultType="study.dev.ssrmbrlsy.vo.hr.RegionsVo">
		SELECT A.REGION_ID AS regionId
		     , A.REGION_NAME AS regionName
		     , B.COUNTRY_ID AS countryId
		     , B.COUNTRY_NAME AS countryName
		  FROM REGIONS A
		     , COUNTRIES B
		 WHERE 1=1
		   AND A.REGION_ID = B.REGION_ID
		 ORDER BY A.REGION_ID, B.COUNTRY_ID
	</select>

	<!--3단계 location 검색-->
	<select id="selectLocationsList" resultType="study.dev.ssrmbrlsy.vo.hr.RegionsVo">
		SELECT A.REGION_ID AS regionId
		     , A.REGION_NAME AS regionName
		     , B.COUNTRY_ID AS countryId
		     , B.COUNTRY_NAME countryName
		     , NVL(C.LOCATION_ID ,0) AS locationId
		     , C.CITY AS city
		     , C.STREET_ADDRESS AS streetAddress
		     , C.POSTAL_CODE AS postalCode
		     , C.STATE_PROVINCE AS stateProvince
		  FROM REGIONS A
		     , COUNTRIES B
		     , LOCATIONS C
		 WHERE 1=1
		   AND A.REGION_ID = B.REGION_ID(+)
		   AND B.COUNTRY_ID = C.COUNTRY_ID(+)
		 ORDER BY A.REGION_ID, B.COUNTRY_ID, C.LOCATION_ID
	</select>

	<!--4단계 부서 검색-->
	<select id="selectDeptList" resultType="study.dev.ssrmbrlsy.vo.hr.RegionsVo">
		SELECT A.REGION_ID AS regionId
			 , A.REGION_NAME AS regionName
			 , B.COUNTRY_ID AS countryId
			 , B.COUNTRY_NAME AS countryName
			 , NVL(C.LOCATION_ID ,0) AS locationId
			 , C.CITY AS city
		     , NVL(D.DEPARTMENT_ID,0) AS departmentId
			 , D.DEPARTMENT_NAME AS departmentName
		  FROM REGIONS A
			 , COUNTRIES B
			 , LOCATIONS C
		     , DEPARTMENTS D
		 WHERE 1=1
		   AND A.REGION_ID = B.REGION_ID(+)
		   AND B.COUNTRY_ID = C.COUNTRY_ID(+)
		   AND C.LOCATION_ID = D.LOCATION_ID(+)
		 ORDER BY A.REGION_ID, B.COUNTRY_ID, C.LOCATION_ID, D.DEPARTMENT_ID
	</select>

	<!--5단계 직원검색-->
	<select id="selectEmployeeList" resultType="study.dev.ssrmbrlsy.vo.hr.RegionsVo">
        SELECT NVL(A.REGION_ID, 0) AS regionId
        	 , NVL(A.REGION_NAME, 'none') AS regionName
        	 , NVL(B.COUNTRY_ID, 'none') AS countryId
        	 , NVL(B.COUNTRY_NAME, 'none') AS countryName
        	 , NVL(C.LOCATION_ID, 0) AS locationId
        	 , NVL(C.CITY, 'none') AS city
        	 , NVL(D.DEPARTMENT_ID, 0) AS departmentId
        	 , NVL(D.DEPARTMENT_NAME, 'none') AS departmentName
        	 , NVL(E.EMPLOYEE_ID, 0) AS employeeId
        	 , NVL(E.FIRST_NAME || ' ' || E.LAST_NAME, 'none')  AS name
        	 , NVL(E.EMAIL, 'none')  AS email
        	 , NVL(E.PHONE_NUMBER, 0)  AS phoneNumber
		     , NVL(TO_CHAR(E.HIRE_DATE,'YYYY-MM-DD'),TO_CHAR(SYSDATE,'YYYY-MM-DD')) AS hireDate
        	 , NVL(E.SALARY, 0)  AS salary
        	 , NVL(F.JOB_TITLE, 'none')  AS jobTitle
		  FROM REGIONS A
			 , COUNTRIES B
			 , LOCATIONS C
			 , DEPARTMENTS D
			 , EMPLOYEES E
			 , JOBS F
		 WHERE 1=1
		   AND B.REGION_ID = A.REGION_ID(+)
		   AND C.COUNTRY_ID = B.COUNTRY_ID(+)
		   AND D.LOCATION_ID = C.LOCATION_ID(+)
		   AND E.DEPARTMENT_ID = D.DEPARTMENT_ID(+)
		   AND E.JOB_ID = F.JOB_ID(+)
		 ORDER BY A.REGION_ID, B.COUNTRY_ID, C.LOCATION_ID, D.DEPARTMENT_ID, E.EMPLOYEE_ID, F.JOB_ID
	</select>

</mapper>